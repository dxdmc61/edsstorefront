import { Base } from "./Base";
import { CustomContext } from "./types/contexts";
import { Account, AEP, Category, ChangedProducts, Channel, CustomUrl, Debug, EventForwarding, ExperiencePlatformConnectorExtension, MagentoExtension, Order, Page, Product, Shopper, ShoppingCart, StorefrontInstance, Recommendations, ReferrerUrl, RequisitionList, RequisitionListItems, SearchInput, SearchResults, DataServicesExtension, RecommendationsExtension, SearchExtension } from "./types/schemas";
import { OrderProducts } from "./types/schemas/orderProducts";
export default class ContextManager extends Base {
    getAEP(): AEP;
    setAEP(context: AEP): void;
    getAccount(): Account;
    setAccount(context: Account): void;
    getChangedProducts(): ChangedProducts;
    setChangedProducts(context: ChangedProducts): void;
    getCategory(): Category;
    setCategory(context: Category): void;
    getChannel(): Channel;
    setChannel(context: Channel): void;
    getDebug(): Debug;
    setDebug(context: Debug): void;
    getEventForwarding(): EventForwarding;
    setEventForwarding(context: EventForwarding): void;
    getExperiencePlatformConnectorExtension(): ExperiencePlatformConnectorExtension;
    setExperiencePlatformConnectorExtension(context: ExperiencePlatformConnectorExtension): void;
    getCustom(): CustomContext;
    setCustom(context: CustomContext): void;
    getCustomUrl(): CustomUrl;
    setCustomUrl(context: CustomUrl): void;
    getDataServicesExtension(): DataServicesExtension;
    setDataServicesExtension(context: DataServicesExtension): void;
    getMagentoExtension(): MagentoExtension;
    setMagentoExtension(context: MagentoExtension): void;
    getOrder(): Order;
    setOrder(context: Order): void;
    getOrderPage(): OrderProducts;
    setOrderPage(context: OrderProducts): void;
    getPage(): Page;
    setPage(context: Page): void;
    getProduct(): Product;
    setProduct(context: Product): void;
    getRecommendations(): Recommendations;
    setRecommendations(context: Recommendations): void;
    getRecommendationsExtension(): RecommendationsExtension;
    setRecommendationsExtension(context: RecommendationsExtension): void;
    getReferrerUrl(): ReferrerUrl;
    setReferrerUrl(context: ReferrerUrl): void;
    getRequisitionList(): RequisitionList;
    setRequisitionList(context: RequisitionList): void;
    getRequisitionListItems(): RequisitionListItems;
    setRequisitionListItems(context: RequisitionListItems): void;
    getSearchExtension(): SearchExtension;
    setSearchExtension(context: SearchExtension): void;
    getSearchInput(): SearchInput;
    setSearchInput(context: SearchInput): void;
    getSearchResults(): SearchResults;
    setSearchResults(context: SearchResults): void;
    getShopper(): Shopper;
    setShopper(context: Shopper): void;
    getShoppingCart(): ShoppingCart;
    setShoppingCart(context: ShoppingCart): void;
    getStorefrontInstance(): StorefrontInstance;
    setStorefrontInstance(context: StorefrontInstance): void;
    getContext<T>(name?: string): T;
    setContext<T>(name: string, context: T): void;
}
//# sourceMappingURL=ContextManager.d.ts.map