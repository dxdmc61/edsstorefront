import g from"fs/promises";import{parseModule as y}from"esprima";import P from"escodegen";import{parse as $,print as E}from"graphql";import{visit as V}from"graphql/language/index.mjs";import w from"path";function A(t,e){const[n,...s]=e.definitions,o=n.name.value;if(s.length>0)return[t,{success:[],errors:[[o]]}];const i=t.definitions.find(c=>{var u,d;return c.kind===n.kind&&c.name.value===o&&c.operation===n.operation&&((u=c.typeCondition)==null?void 0:u.name.value)===((d=n.typeCondition)==null?void 0:d.name.value)});if(!i)return[t,{success:[],errors:[[o]]}];const r=S(i,n).map(c=>[o,...c]);return[t,{success:r,errors:[]}]}function b(t,e){return t.selectionSet.selections.find(n=>{var s,o;return((s=n.name)==null?void 0:s.value)===((o=e.name)==null?void 0:o.value)})}function S(t,e,n=[]){const s=[];return e.selectionSet.selections.forEach(o=>{o.kind==="Field"&&G(t,o,n,s),o.kind==="InlineFragment"&&L(t,o,n,s)}),s}function G(t,e,n,s){const o=b(t,e),i=[...n,e.name.value];N(o,e),o!=null&&o.selectionSet&&e.selectionSet?s.push(...S(o,e,i)):O(t,e,o,i,s)}function L(t,e,n,s){var r;const o=(r=e.typeCondition)==null?void 0:r.name.value,i=[...n,o],a=M(t,o);a?Q(a,e,i,s):q(t,e,i,s)}function M(t,e){return t.selectionSet.selections.find(n=>{var s;return n.kind==="InlineFragment"&&((s=n.typeCondition)==null?void 0:s.name.value)===e})}function Q(t,e,n,s){e.selectionSet.selections.forEach(o=>{var a;const i=b(t,o);if(i)S(i,o,n);else{t.selectionSet.selections.push(o);const r=`${(a=e.typeCondition)==null?void 0:a.name.value}(${o.name.value})`;n[n.length-1]=r,s.push([...n])}})}function q(t,e,n,s){t.selectionSet.selections.push(e),e.selectionSet.selections.forEach(o=>{var a;const i=`${(a=e.typeCondition)==null?void 0:a.name.value}(${o.name.value})`;n[n.length-1]=i,s.push([...n])})}function N(t,e){const n=(t==null?void 0:t.arguments)??[],s=e.arguments;for(const o of s){const i=n.find(a=>a.name.value===o.name.value);i?i.value=o.value:n.push(o)}}function O(t,e,n,s,o){e.selectionSet&&s.push(e.selectionSet.selections[0].name.value),o.push(s),n||t.selectionSet.selections.push(e)}function U(t,e){const n=t.definitions.filter(o=>o.kind==="FragmentDefinition"?o.name.value!==e:!0);return{...t,definitions:n.map(o=>V(o,{FragmentSpread(i){if(i.name.value===e)return null}}))}}async function W(t){try{await g.access(t);const e=t.replace(/\.\w+$/,".original$&");try{await g.access(e)}catch{await g.copyFile(t,e)}return{src:w.resolve(e),dist:w.resolve(t)}}catch{return null}}async function _(t){const e=w.join(process.cwd(),"node_modules",t,"fragments.js");return W(e)}function j(t,e){return t.body.filter(n=>n.type==="ExportNamedDeclaration").flatMap(n=>n.specifiers).find(n=>n.exported.name===e)}function I(t,e){return t.body.filter(n=>n.type==="VariableDeclaration").flatMap(n=>n.declarations).find(n=>n.id.name===e)}function z(t){const e=t.init.quasis.map(s=>s.value.raw).join("").trim(),n=t.init.expressions.map(s=>`\${${s.name}}`).join(`
`).trim();return[e,n]}function C(t,e){const n=j(t,e);if(!n)return null;const s=I(t,n.local.name),o=z(s);return{exported:n.exported.name,local:n.local.name,content:o[0],expressions:o[1]}}function D(t,e,n){const s=j(t,e),{local:o}=s,i=I(t,o.name);return i.init={type:"Literal",value:n,raw:`\`${n}\``},P.generate(t,{verbatim:"raw",format:{indent:{style:""},json:!0}}).replace(/\$\{\s(.*)\s\}/g,"${$1}")}async function Y(t=[]){console.log("🔎 Checking GraphQl operation files...");let e=new Map;for(const s of t){const{npm:o}=s,i="operations"in s?s.operations:[],a="skipFragments"in s?s.skipFragments:[],r=await _(o);if(!r){console.warn("\x1B[31m%s\x1B[0m",`⛔️ Cannot access fragments.js file in "${o}".`,"\x1B[0m");continue}if(await g.copyFile(r.src,r.dist),console.log(`
🔄 File "${r.dist}" restored.
`),a.length){const c=e.get(r.dist)??await g.readFile(r.src,"utf-8");let u=y(c);const d=u.body.filter(l=>l.type==="ExportNamedDeclaration").flatMap(l=>l.specifiers);let f=c;for(const l of d){const m=l.exported.name;let p;try{p=C(u,m)}catch{}if(!p){console.warn("\x1B[31m%s\x1B[0m",`⛔️ Could not process export "${m}". Skipping...`,"\x1B[0m");continue}let h=$(p.content);for(const v of a)h=U(h,v);let x=E(h);p.expressions&&(x+=`
`+p.expressions),x!==p.content&&(f=D(u,m,x),u=y(f))}e.set(r.dist,f)}for(const c of i){const u=e.get(r.dist)??await g.readFile(r.src,"utf-8"),d=y(u),f=$(c),l=f.definitions[0].name.value;if(f.definitions.length>1){console.warn("\x1B[31m%s\x1B[0m",`⛔️ Operation "${l}" in ${r.dist} has multiple definitions. Skipping...`,"\x1B[0m");continue}const m=C(d,l);if(!m){console.warn("\x1B[31m%s\x1B[0m",`⛔️ Could not find export "${l}" in "${r.dist}".`,"\x1B[0m");continue}const p=$(m.content),[B,{success:h,errors:k}]=A(p,f);k.forEach(F=>{console.warn("\x1B[31m%s\x1B[0m",`𐄂 ${F.join(".")}`,"\x1B[0m")}),h.forEach(F=>{console.log("\x1B[32m%s\x1B[0m",`✔ ${F.join(".")}`,"\x1B[0m")});let x=E(B);m.expressions&&(x+=`
`+m.expressions);const v=D(d,l,x);e.set(r.dist,v)}}const n=Array.from(e.keys()).map(s=>{const o=e.get(s);return g.writeFile(s,o).then(()=>{console.log(`
💾 File "${s}" updated.
`)})});await Promise.all(n)}export{Y as default,Y as overrideGQLOperations};
